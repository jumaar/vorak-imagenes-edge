networks:
  vorak-net:
    driver: bridge
      
volumes:
  nevera_db:
  nevera_offline_queue:
  nevera_review_queue:
  kiosk_data:
  fridge_status:
  backup_data:
  prometheus_data:

services:
  #--------------------------------------------------------------------------
  # SERVICIO 'NEVERA' - El cerebro del sistema
  #--------------------------------------------------------------------------
  nevera:
    
    build:
      context: .
      dockerfile: ./MODULO-NEVERA/Dockerfile
    image: ghcr.io/jumaar/vorak-imagenes-edge/nevera:latest 
    container_name: vorak-nevera
    restart: unless-stopped
    
    env_file: ./.env

    volumes:
      - nevera_db:/app/db
      - nevera_offline_queue:/app/offline_queue
      - nevera_review_queue:/app/review_queue
      - fridge_status:/app/status

    devices:
      - "/dev/video0:/dev/video0"
      - "/dev/video2:/dev/video2"
      - "/dev/ttyUSB0:/dev/ttyUSB0"

    networks:
      - vorak-net
      
    dns:
      - 8.8.8.8
      - 1.1.1.1

    group_add:
      - "${VIDEO_GID}"
      - "${DIALOUT_GID}"
  

  #--------------------------------------------------------------------------
  # SERVICIO 'KIOSKO' - La interfaz de usuario web
  #--------------------------------------------------------------------------
  kiosko:
    
    build:
      context: .
      dockerfile: ./MODULO-KIOSKO/Dockerfile
    image: ghcr.io/jumaar/vorak-imagenes-edge/kiosko:latest 
    container_name: vorak-kiosko
    restart: unless-stopped
  
    ports:
      - "5000:5000"
      - "9091:5000"
  
    env_file: ./.env
  
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app
      - fridge_status:/app/status
      - kiosk_data:/app/data
  
    working_dir: /app/MODULO-KIOSKO
  
    networks:
      - vorak-net
  
    dns:
      - 8.8.8.8
      - 1.1.1.1
  
    group_add:
      - "${DOCKER_GID:-$(stat -c '%g' /var/run/docker.sock)}"
  #--------------------------------------------------------------------------
  # SERVICIO 'BACKUP' - Realiza copias de seguridad peri칩dicas
  #--------------------------------------------------------------------------
  backup:
    image: alpine:latest
    container_name: vorak-backup
    restart: unless-stopped
    command: >
      /bin/sh -c "
        chmod +x /backup/backup.sh && \
        echo 'Contenedor de backup iniciado. El primer backup se ejecutar치 en 1 minuto...';
        sleep 60;
        while true; do
          /backup/backup.sh;
          echo 'Backup completado. Pr칩xima ejecuci칩n en 24 horas.';
          sleep 86400;
        done
      "
    volumes:
      - ./MODULO-BACKUP/backup.sh:/backup/backup.sh
      - nevera_offline_queue:/backups/source/offline_queue:ro
      - nevera_review_queue:/backups/source/review_queue:ro
      - backup_data:/backups/destination

    networks:
      - vorak-net
      
    dns:
      - 8.8.8.8
      - 1.1.1.1

  #--------------------------------------------------------------------------
  # STACK DE MONITOREO - Portainer, Prometheus, etc.
  #--------------------------------------------------------------------------
  prometheus:
    build:
      context: ./MODULO-MONITORING
      dockerfile: prometheus.Dockerfile
    image: ghcr.io/jumaar/vorak-imagenes-edge/prometheus:latest
    container_name: vorak-prometheus

    ports:
      - "9090:9090"
    
    env_file: ./.env
    
    volumes:
      - ./MODULO-MONITORING/prometheus.yml:/etc/prometheus/prometheus.yml
      - /var/run/docker.sock:/var/run/docker.sock:ro
   
    command:
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'

    restart: unless-stopped

    networks:
      - vorak-net
  

  promtail:
    build:
      context: ./MODULO-MONITORING
      dockerfile: promtail.Dockerfile
    image: ghcr.io/jumaar/vorak-imagenes-edge/promtail:latest
    container_name: vorak-promtail
    
    env_file: ./.env
    
    volumes:
     
      - ./MODULO-MONITORING/promtail-config.yml:/etc/promtail/config.yml
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    
    restart: unless-stopped
    networks:
      - vorak-net
    

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.47.2
    container_name: vorak-cadvisor
    
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
      - /dev:/dev:ro
      - /etc/machine-id:/etc/machine-id:ro
    restart: unless-stopped

    networks:
      - vorak-net

    dns:
      - 8.8.8.8
      - 1.1.1.1

    privileged: true

    command: --docker_only


  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: vorak-node-exporter

    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - '--path.rootfs=/rootfs'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run/docker/netns|var/lib/docker/containers|var/lib/docker/overlay2)($$|/)'
      - '--no-collector.nfsd'

    restart: unless-stopped

    networks:
      - vorak-net

    dns:
      - 8.8.8.8
      - 1.1.1.1


  #--------------------------------------------------------------------------
  # SERVICIO 'DEPLOYER' - Contenedor de utilidad para el redespliegue
  #--------------------------------------------------------------------------
  deployer:    
    
    profiles:
      - tools

    image: ghcr.io/jumaar/vorak-imagenes-edge/deployer:latest
    container_name: vorak-deployer
    
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - .:/app

    env_file: ./.env

    working_dir: /app

    networks:
      - vorak-net

    dns:
      - 8.8.8.8
      - 1.1.1.1
